// <auto-generated/>

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0612, CS0618

namespace core.audiamus.connect.ui
{
    public partial class WindowsFormsJsonContext
    {
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::core.audiamus.connect.ui.BookDataSource>? _BookDataSource;
        
        /// <summary>
        /// Defines the source generated JSON serialization contract metadata for a given type.
        /// </summary>
        #nullable disable annotations // Marking the property type as nullable-oblivious.
        public global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::core.audiamus.connect.ui.BookDataSource> BookDataSource
        #nullable enable annotations
        {
            get => _BookDataSource ??= (global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::core.audiamus.connect.ui.BookDataSource>)Options.GetTypeInfo(typeof(global::core.audiamus.connect.ui.BookDataSource));
        }
        
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::core.audiamus.connect.ui.BookDataSource> Create_BookDataSource(global::System.Text.Json.JsonSerializerOptions options)
        {
            if (!TryGetTypeInfoForRuntimeCustomConverter<global::core.audiamus.connect.ui.BookDataSource>(options, out global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::core.audiamus.connect.ui.BookDataSource> jsonTypeInfo))
            {
                var objectInfo = new global::System.Text.Json.Serialization.Metadata.JsonObjectInfoValues<global::core.audiamus.connect.ui.BookDataSource>
                {
                    ObjectCreator = null,
                    ObjectWithParameterizedConstructorCreator = static args => new global::core.audiamus.connect.ui.BookDataSource((global::core.audiamus.booksdb.Book)args[0], (global::core.audiamus.connect.IDownloadSettings)args[1]),
                    PropertyMetadataInitializer = _ => BookDataSourcePropInit(options),
                    ConstructorParameterMetadataInitializer = BookDataSourceCtorParamInit,
                    ConstructorAttributeProviderFactory = static () => typeof(global::core.audiamus.connect.ui.BookDataSource).GetConstructor(InstanceMemberBindingFlags, binder: null, new[] {typeof(global::core.audiamus.booksdb.Book), typeof(global::core.audiamus.connect.IDownloadSettings)}, modifiers: null),
                    SerializeHandler = null,
                };
                
                jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateObjectInfo<global::core.audiamus.connect.ui.BookDataSource>(options, objectInfo);
                jsonTypeInfo.NumberHandling = null;
            }
        
            jsonTypeInfo.OriginatingResolver = this;
            return jsonTypeInfo;
        }

        private static global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[] BookDataSourcePropInit(global::System.Text.Json.JsonSerializerOptions options)
        {
            var properties = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[26];

            var info0 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.Drawing.Image>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.connect.ui.BookDataSource),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.ui.BookDataSource)obj).State,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "State",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.ui.BookDataSource).GetProperty("State", InstanceMemberBindingFlags, null, typeof(global::System.Drawing.Image), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[0] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.Drawing.Image>(options, info0);

            var info1 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::core.audiamus.booksdb.EConversionState>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.connect.ui.BookDataSource),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.ui.BookDataSource)obj).StateBacking,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "StateBacking",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.ui.BookDataSource).GetProperty("StateBacking", InstanceMemberBindingFlags, null, typeof(global::core.audiamus.booksdb.EConversionState), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[1] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::core.audiamus.booksdb.EConversionState>(options, info1);

            var info2 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.DateTime?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.connect.ui.BookDataSource),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.ui.BookDataSource)obj).PurchaseDate,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "PurchaseDate",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.ui.BookDataSource).GetProperty("PurchaseDate", InstanceMemberBindingFlags, null, typeof(global::System.DateTime?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[2] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.DateTime?>(options, info2);

            var info3 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.connect.ui.BookDataSource),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.ui.BookDataSource)obj).Title,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Title",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.ui.BookDataSource).GetProperty("Title", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[3] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info3);

            var info4 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.connect.ui.BookDataSource),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.ui.BookDataSource)obj).Author,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Author",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.ui.BookDataSource).GetProperty("Author", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[4] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info4);

            var info5 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.connect.ui.BookDataSource),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.ui.BookDataSource)obj).Duration,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Duration",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.ui.BookDataSource).GetProperty("Duration", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[5] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info5);

            var info6 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<int?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.connect.ui.BookDataSource),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.ui.BookDataSource)obj).Year,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Year",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.ui.BookDataSource).GetProperty("Year", InstanceMemberBindingFlags, null, typeof(int?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[6] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<int?>(options, info6);

            var info7 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.connect.ui.BookDataSource),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.ui.BookDataSource)obj).Narrator,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Narrator",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.ui.BookDataSource).GetProperty("Narrator", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[7] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info7);

            var info8 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.connect.ui.BookDataSource),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.ui.BookDataSource)obj).Series,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Series",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.ui.BookDataSource).GetProperty("Series", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[8] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info8);

            var info9 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<bool?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.connect.ui.BookDataSource),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.ui.BookDataSource)obj).Adult,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Adult",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.ui.BookDataSource).GetProperty("Adult", InstanceMemberBindingFlags, null, typeof(bool?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[9] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<bool?>(options, info9);

            var info10 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.connect.ui.BookDataSource),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.ui.BookDataSource)obj).Genre,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Genre",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.ui.BookDataSource).GetProperty("Genre", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[10] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info10);

            var info11 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<int?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.connect.ui.BookDataSource),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.ui.BookDataSource)obj).Parts,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Parts",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.ui.BookDataSource).GetProperty("Parts", InstanceMemberBindingFlags, null, typeof(int?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[11] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<int?>(options, info11);

            var info12 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::core.audiamus.booksdb.Book>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.connect.ui.BookDataSourceBase),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.ui.BookDataSourceBase)obj).Book,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Book",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.ui.BookDataSourceBase).GetProperty("Book", InstanceMemberBindingFlags, null, typeof(global::core.audiamus.booksdb.Book), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[12] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::core.audiamus.booksdb.Book>(options, info12);

            var info13 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<int?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.connect.ui.BookDataSourceBase),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.ui.BookDataSourceBase)obj).SampleRateBacking,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "SampleRateBacking",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.ui.BookDataSourceBase).GetProperty("SampleRateBacking", InstanceMemberBindingFlags, null, typeof(int?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[13] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<int?>(options, info13);

            var info14 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<int?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.connect.ui.BookDataSourceBase),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.ui.BookDataSourceBase)obj).BitRateBacking,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "BitRateBacking",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.ui.BookDataSourceBase).GetProperty("BitRateBacking", InstanceMemberBindingFlags, null, typeof(int?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[14] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<int?>(options, info14);

            var info15 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.connect.ui.DataSourceBase<global::core.audiamus.booksdb.Book>),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.ui.DataSourceBase<global::core.audiamus.booksdb.Book>)obj).Title,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Title",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.ui.DataSourceBase<global::core.audiamus.booksdb.Book>).GetProperty("Title", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[15] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info15);

            var info16 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.connect.ui.DataSourceBase<global::core.audiamus.booksdb.Book>),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.ui.DataSourceBase<global::core.audiamus.booksdb.Book>)obj).Author,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Author",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.ui.DataSourceBase<global::core.audiamus.booksdb.Book>).GetProperty("Author", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[16] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info16);

            var info17 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.connect.ui.DataSourceBase<global::core.audiamus.booksdb.Book>),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.ui.DataSourceBase<global::core.audiamus.booksdb.Book>)obj).Duration,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Duration",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.ui.DataSourceBase<global::core.audiamus.booksdb.Book>).GetProperty("Duration", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[17] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info17);

            var info18 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.TimeSpan?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.connect.ui.DataSourceBase<global::core.audiamus.booksdb.Book>),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.ui.DataSourceBase<global::core.audiamus.booksdb.Book>)obj).DurationBacking,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "DurationBacking",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.ui.DataSourceBase<global::core.audiamus.booksdb.Book>).GetProperty("DurationBacking", InstanceMemberBindingFlags, null, typeof(global::System.TimeSpan?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[18] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.TimeSpan?>(options, info18);

            var info19 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<long?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.connect.ui.DataSourceBase<global::core.audiamus.booksdb.Book>),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.ui.DataSourceBase<global::core.audiamus.booksdb.Book>)obj).FileSizeBacking,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "FileSizeBacking",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.ui.DataSourceBase<global::core.audiamus.booksdb.Book>).GetProperty("FileSizeBacking", InstanceMemberBindingFlags, null, typeof(long?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[19] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<long?>(options, info19);

            var info20 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.connect.ui.DataSourceBase<global::core.audiamus.booksdb.Book>),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.ui.DataSourceBase<global::core.audiamus.booksdb.Book>)obj).Narrator,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Narrator",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.ui.DataSourceBase<global::core.audiamus.booksdb.Book>).GetProperty("Narrator", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[20] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info20);

            var info21 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.DateTime?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.connect.ui.DataSourceBase<global::core.audiamus.booksdb.Book>),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.ui.DataSourceBase<global::core.audiamus.booksdb.Book>)obj).PurchaseDate,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "PurchaseDate",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.ui.DataSourceBase<global::core.audiamus.booksdb.Book>).GetProperty("PurchaseDate", InstanceMemberBindingFlags, null, typeof(global::System.DateTime?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[21] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.DateTime?>(options, info21);

            var info22 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::core.audiamus.booksdb.Book>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.aux.propgrid.BasePropertyGridAdapter<global::core.audiamus.booksdb.Book>),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.aux.propgrid.BasePropertyGridAdapter<global::core.audiamus.booksdb.Book>)obj).DataSource,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "DataSource",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.aux.propgrid.BasePropertyGridAdapter<global::core.audiamus.booksdb.Book>).GetProperty("DataSource", InstanceMemberBindingFlags, null, typeof(global::core.audiamus.booksdb.Book), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[22] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::core.audiamus.booksdb.Book>(options, info22);

            var info23 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.Action>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.aux.propgrid.BasePropertyGridAdapter<global::core.audiamus.booksdb.Book>),
                Converter = null,
                Getter = null,
                Setter = static (obj, value) => ((global::core.audiamus.aux.propgrid.BasePropertyGridAdapter<global::core.audiamus.booksdb.Book>)obj).RefreshDelegate = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "RefreshDelegate",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.aux.propgrid.BasePropertyGridAdapter<global::core.audiamus.booksdb.Book>).GetProperty("RefreshDelegate", InstanceMemberBindingFlags, null, typeof(global::System.Action), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[23] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.Action>(options, info23);

            var info24 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::core.audiamus.aux.propgrid.CategoryCommands>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.aux.propgrid.DynamicTypeDescriptor),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.aux.propgrid.DynamicTypeDescriptor)obj).CategoryCommands,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "CategoryCommands",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.aux.propgrid.DynamicTypeDescriptor).GetProperty("CategoryCommands", InstanceMemberBindingFlags, null, typeof(global::core.audiamus.aux.propgrid.CategoryCommands), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[24] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::core.audiamus.aux.propgrid.CategoryCommands>(options, info24);

            var info25 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::core.audiamus.aux.propgrid.PropertyCommands>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.aux.propgrid.DynamicTypeDescriptor),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.aux.propgrid.DynamicTypeDescriptor)obj).PropertyCommands,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "PropertyCommands",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.aux.propgrid.DynamicTypeDescriptor).GetProperty("PropertyCommands", InstanceMemberBindingFlags, null, typeof(global::core.audiamus.aux.propgrid.PropertyCommands), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[25] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::core.audiamus.aux.propgrid.PropertyCommands>(options, info25);

            return properties;
        }

        private static global::System.Text.Json.Serialization.Metadata.JsonParameterInfoValues[] BookDataSourceCtorParamInit() => new global::System.Text.Json.Serialization.Metadata.JsonParameterInfoValues[]
        {
            new()
            {
                Name = "book",
                ParameterType = typeof(global::core.audiamus.booksdb.Book),
                Position = 0,
                HasDefaultValue = false,
                DefaultValue = null,
                IsNullable = true,
            },

            new()
            {
                Name = "settings",
                ParameterType = typeof(global::core.audiamus.connect.IDownloadSettings),
                Position = 1,
                HasDefaultValue = false,
                DefaultValue = null,
                IsNullable = true,
            },
        };
    }
}
