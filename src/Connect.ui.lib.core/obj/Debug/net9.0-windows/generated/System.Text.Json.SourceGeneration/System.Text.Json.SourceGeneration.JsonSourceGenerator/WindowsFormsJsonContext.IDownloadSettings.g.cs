// <auto-generated/>

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0612, CS0618

namespace core.audiamus.connect.ui
{
    public partial class WindowsFormsJsonContext
    {
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::core.audiamus.connect.IDownloadSettings>? _IDownloadSettings;
        
        /// <summary>
        /// Defines the source generated JSON serialization contract metadata for a given type.
        /// </summary>
        #nullable disable annotations // Marking the property type as nullable-oblivious.
        public global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::core.audiamus.connect.IDownloadSettings> IDownloadSettings
        #nullable enable annotations
        {
            get => _IDownloadSettings ??= (global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::core.audiamus.connect.IDownloadSettings>)Options.GetTypeInfo(typeof(global::core.audiamus.connect.IDownloadSettings));
        }
        
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::core.audiamus.connect.IDownloadSettings> Create_IDownloadSettings(global::System.Text.Json.JsonSerializerOptions options)
        {
            if (!TryGetTypeInfoForRuntimeCustomConverter<global::core.audiamus.connect.IDownloadSettings>(options, out global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::core.audiamus.connect.IDownloadSettings> jsonTypeInfo))
            {
                var objectInfo = new global::System.Text.Json.Serialization.Metadata.JsonObjectInfoValues<global::core.audiamus.connect.IDownloadSettings>
                {
                    ObjectCreator = null,
                    ObjectWithParameterizedConstructorCreator = null,
                    PropertyMetadataInitializer = _ => IDownloadSettingsPropInit(options),
                    ConstructorParameterMetadataInitializer = null,
                    ConstructorAttributeProviderFactory = null,
                    SerializeHandler = null,
                };
                
                jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateObjectInfo<global::core.audiamus.connect.IDownloadSettings>(options, objectInfo);
                jsonTypeInfo.NumberHandling = null;
            }
        
            jsonTypeInfo.OriginatingResolver = this;
            return jsonTypeInfo;
        }

        private static global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[] IDownloadSettingsPropInit(global::System.Text.Json.JsonSerializerOptions options)
        {
            var properties = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[10];

            var info0 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<bool>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.connect.IDownloadSettings),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.IDownloadSettings)obj).AutoUpdateLibrary,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "AutoUpdateLibrary",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.IDownloadSettings).GetProperty("AutoUpdateLibrary", InstanceMemberBindingFlags, null, typeof(bool), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[0] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<bool>(options, info0);

            var info1 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<bool>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.connect.IDownloadSettings),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.IDownloadSettings)obj).AutoOpenDownloadDialog,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "AutoOpenDownloadDialog",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.IDownloadSettings).GetProperty("AutoOpenDownloadDialog", InstanceMemberBindingFlags, null, typeof(bool), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[1] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<bool>(options, info1);

            var info2 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<bool>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.connect.IDownloadSettings),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.IDownloadSettings)obj).IncludeAdultProducts,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "IncludeAdultProducts",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.IDownloadSettings).GetProperty("IncludeAdultProducts", InstanceMemberBindingFlags, null, typeof(bool), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[2] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<bool>(options, info2);

            var info3 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<bool>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.connect.IDownloadSettings),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.IDownloadSettings)obj).HideUnavailableProducts,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "HideUnavailableProducts",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.IDownloadSettings).GetProperty("HideUnavailableProducts", InstanceMemberBindingFlags, null, typeof(bool), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[3] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<bool>(options, info3);

            var info4 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<bool>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.connect.IDownloadSettings),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.IDownloadSettings)obj).KeepEncryptedFiles,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "KeepEncryptedFiles",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.IDownloadSettings).GetProperty("KeepEncryptedFiles", InstanceMemberBindingFlags, null, typeof(bool), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[4] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<bool>(options, info4);

            var info5 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::core.audiamus.booksdb.EDownloadQuality>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.connect.IDownloadSettings),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.IDownloadSettings)obj).DownloadQuality,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "DownloadQuality",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.IDownloadSettings).GetProperty("DownloadQuality", InstanceMemberBindingFlags, null, typeof(global::core.audiamus.booksdb.EDownloadQuality), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[5] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::core.audiamus.booksdb.EDownloadQuality>(options, info5);

            var info6 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.connect.IDownloadSettings),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.IDownloadSettings)obj).DownloadDirectory,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "DownloadDirectory",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.IDownloadSettings).GetProperty("DownloadDirectory", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[6] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info6);

            var info7 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::core.audiamus.connect.EInitialSorting>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.connect.IDownloadSettings),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.IDownloadSettings)obj).InitialSorting,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "InitialSorting",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.IDownloadSettings).GetProperty("InitialSorting", InstanceMemberBindingFlags, null, typeof(global::core.audiamus.connect.EInitialSorting), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[7] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::core.audiamus.connect.EInitialSorting>(options, info7);

            var info8 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<bool>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.connect.IAuthorizeSettings),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.IAuthorizeSettings)obj).AutoRefresh,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "AutoRefresh",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.IAuthorizeSettings).GetProperty("AutoRefresh", InstanceMemberBindingFlags, null, typeof(bool), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[8] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<bool>(options, info8);

            var info9 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<bool>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.connect.IMultiPartSettings),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.IMultiPartSettings)obj).MultiPartDownload,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "MultiPartDownload",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.IMultiPartSettings).GetProperty("MultiPartDownload", InstanceMemberBindingFlags, null, typeof(bool), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[9] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<bool>(options, info9);

            return properties;
        }
    }
}
