// <auto-generated/>

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0612, CS0618

namespace core.audiamus.connect.ui
{
    public partial class WindowsFormsJsonContext
    {
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::core.audiamus.booksdb.Book>? _Book;
        
        /// <summary>
        /// Defines the source generated JSON serialization contract metadata for a given type.
        /// </summary>
        #nullable disable annotations // Marking the property type as nullable-oblivious.
        public global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::core.audiamus.booksdb.Book> Book
        #nullable enable annotations
        {
            get => _Book ??= (global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::core.audiamus.booksdb.Book>)Options.GetTypeInfo(typeof(global::core.audiamus.booksdb.Book));
        }
        
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::core.audiamus.booksdb.Book> Create_Book(global::System.Text.Json.JsonSerializerOptions options)
        {
            if (!TryGetTypeInfoForRuntimeCustomConverter<global::core.audiamus.booksdb.Book>(options, out global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::core.audiamus.booksdb.Book> jsonTypeInfo))
            {
                var objectInfo = new global::System.Text.Json.Serialization.Metadata.JsonObjectInfoValues<global::core.audiamus.booksdb.Book>
                {
                    ObjectCreator = () => new global::core.audiamus.booksdb.Book(),
                    ObjectWithParameterizedConstructorCreator = null,
                    PropertyMetadataInitializer = _ => BookPropInit(options),
                    ConstructorParameterMetadataInitializer = null,
                    ConstructorAttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetConstructor(InstanceMemberBindingFlags, binder: null, global::System.Array.Empty<global::System.Type>(), modifiers: null),
                    SerializeHandler = null,
                };
                
                jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateObjectInfo<global::core.audiamus.booksdb.Book>(options, objectInfo);
                jsonTypeInfo.NumberHandling = null;
            }
        
            jsonTypeInfo.OriginatingResolver = this;
            return jsonTypeInfo;
        }

        private static global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[] BookPropInit(global::System.Text.Json.JsonSerializerOptions options)
        {
            var properties = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[40];

            var info0 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<int>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).Id,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Id",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("Id", InstanceMemberBindingFlags, null, typeof(int), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[0] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<int>(options, info0);

            var info1 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).Asin,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Book)obj).Asin = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Asin",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("Asin", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[1] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info1);

            var info2 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).Title,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Book)obj).Title = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Title",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("Title", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[2] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info2);

            var info3 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).Subtitle,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Book)obj).Subtitle = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Subtitle",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("Subtitle", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[3] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info3);

            var info4 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).PublisherName,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Book)obj).PublisherName = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "PublisherName",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("PublisherName", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[4] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info4);

            var info5 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).PublisherSummary,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Book)obj).PublisherSummary = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "PublisherSummary",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("PublisherSummary", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[5] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info5);

            var info6 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).MerchandisingSummary,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Book)obj).MerchandisingSummary = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "MerchandisingSummary",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("MerchandisingSummary", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[6] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info6);

            var info7 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<float?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).AverageRating,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Book)obj).AverageRating = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "AverageRating",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("AverageRating", InstanceMemberBindingFlags, null, typeof(float?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[7] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<float?>(options, info7);

            var info8 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<int?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).RunTimeLengthSeconds,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Book)obj).RunTimeLengthSeconds = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "RunTimeLengthSeconds",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("RunTimeLengthSeconds", InstanceMemberBindingFlags, null, typeof(int?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[8] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<int?>(options, info8);

            var info9 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<long?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).FileSizeBytes,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Book)obj).FileSizeBytes = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "FileSizeBytes",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("FileSizeBytes", InstanceMemberBindingFlags, null, typeof(long?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[9] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<long?>(options, info9);

            var info10 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<int?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).SampleRate,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Book)obj).SampleRate = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "SampleRate",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("SampleRate", InstanceMemberBindingFlags, null, typeof(int?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[10] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<int?>(options, info10);

            var info11 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<int?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).BitRate,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Book)obj).BitRate = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "BitRate",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("BitRate", InstanceMemberBindingFlags, null, typeof(int?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[11] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<int?>(options, info11);

            var info12 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::core.audiamus.booksdb.EDownloadQuality?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).DownloadQuality,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Book)obj).DownloadQuality = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "DownloadQuality",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("DownloadQuality", InstanceMemberBindingFlags, null, typeof(global::core.audiamus.booksdb.EDownloadQuality?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[12] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::core.audiamus.booksdb.EDownloadQuality?>(options, info12);

            var info13 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::core.audiamus.booksdb.ECodec?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).FileCodec,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Book)obj).FileCodec = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "FileCodec",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("FileCodec", InstanceMemberBindingFlags, null, typeof(global::core.audiamus.booksdb.ECodec?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[13] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::core.audiamus.booksdb.ECodec?>(options, info13);

            var info14 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::core.audiamus.booksdb.EDeliveryType?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).DeliveryType,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Book)obj).DeliveryType = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "DeliveryType",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("DeliveryType", InstanceMemberBindingFlags, null, typeof(global::core.audiamus.booksdb.EDeliveryType?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[14] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::core.audiamus.booksdb.EDeliveryType?>(options, info14);

            var info15 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<bool?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).Unabridged,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Book)obj).Unabridged = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Unabridged",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("Unabridged", InstanceMemberBindingFlags, null, typeof(bool?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[15] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<bool?>(options, info15);

            var info16 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<bool?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).AdultProduct,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Book)obj).AdultProduct = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "AdultProduct",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("AdultProduct", InstanceMemberBindingFlags, null, typeof(bool?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[16] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<bool?>(options, info16);

            var info17 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.DateTime?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).PurchaseDate,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Book)obj).PurchaseDate = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "PurchaseDate",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("PurchaseDate", InstanceMemberBindingFlags, null, typeof(global::System.DateTime?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[17] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.DateTime?>(options, info17);

            var info18 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.DateTime?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).ReleaseDate,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Book)obj).ReleaseDate = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "ReleaseDate",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("ReleaseDate", InstanceMemberBindingFlags, null, typeof(global::System.DateTime?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[18] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.DateTime?>(options, info18);

            var info19 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).Language,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Book)obj).Language = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Language",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("Language", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[19] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info19);

            var info20 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).CoverImageUrl,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Book)obj).CoverImageUrl = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "CoverImageUrl",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("CoverImageUrl", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[20] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info20);

            var info21 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).CoverImageFile,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Book)obj).CoverImageFile = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "CoverImageFile",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("CoverImageFile", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[21] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info21);

            var info22 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).Sku,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Book)obj).Sku = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Sku",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("Sku", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[22] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info22);

            var info23 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).SkuLite,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Book)obj).SkuLite = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "SkuLite",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("SkuLite", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[23] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info23);

            var info24 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).LicenseKey,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Book)obj).LicenseKey = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "LicenseKey",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("LicenseKey", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[24] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info24);

            var info25 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).LicenseIv,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Book)obj).LicenseIv = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "LicenseIv",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("LicenseIv", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[25] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info25);

            var info26 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<bool?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).Deleted,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Book)obj).Deleted = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Deleted",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("Deleted", InstanceMemberBindingFlags, null, typeof(bool?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[26] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<bool?>(options, info26);

            var info27 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).Author,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Author",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("Author", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[27] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info27);

            var info28 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).MultiAuthors,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "MultiAuthors",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("MultiAuthors", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[28] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info28);

            var info29 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).Narrator,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Narrator",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("Narrator", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[29] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info29);

            var info30 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).MultiNarrators,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "MultiNarrators",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("MultiNarrators", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[30] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info30);

            var info31 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::core.audiamus.booksdb.ChapterInfo>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).ChapterInfo,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Book)obj).ChapterInfo = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "ChapterInfo",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("ChapterInfo", InstanceMemberBindingFlags, null, typeof(global::core.audiamus.booksdb.ChapterInfo), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[31] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::core.audiamus.booksdb.ChapterInfo>(options, info31);

            var info32 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::core.audiamus.booksdb.Conversion>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).Conversion,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Book)obj).Conversion = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Conversion",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("Conversion", InstanceMemberBindingFlags, null, typeof(global::core.audiamus.booksdb.Conversion), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[32] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::core.audiamus.booksdb.Conversion>(options, info32);

            var info33 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.Collections.Generic.ICollection<global::core.audiamus.booksdb.Author>>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).Authors,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Authors",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("Authors", InstanceMemberBindingFlags, null, typeof(global::System.Collections.Generic.ICollection<global::core.audiamus.booksdb.Author>), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[33] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.Collections.Generic.ICollection<global::core.audiamus.booksdb.Author>>(options, info33);

            var info34 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.Collections.Generic.ICollection<global::core.audiamus.booksdb.Narrator>>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).Narrators,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Narrators",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("Narrators", InstanceMemberBindingFlags, null, typeof(global::System.Collections.Generic.ICollection<global::core.audiamus.booksdb.Narrator>), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[34] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.Collections.Generic.ICollection<global::core.audiamus.booksdb.Narrator>>(options, info34);

            var info35 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.Collections.Generic.ICollection<global::core.audiamus.booksdb.Component>>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).Components,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Components",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("Components", InstanceMemberBindingFlags, null, typeof(global::System.Collections.Generic.ICollection<global::core.audiamus.booksdb.Component>), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[35] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.Collections.Generic.ICollection<global::core.audiamus.booksdb.Component>>(options, info35);

            var info36 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.Collections.Generic.ICollection<global::core.audiamus.booksdb.SeriesBook>>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).Series,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Series",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("Series", InstanceMemberBindingFlags, null, typeof(global::System.Collections.Generic.ICollection<global::core.audiamus.booksdb.SeriesBook>), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[36] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.Collections.Generic.ICollection<global::core.audiamus.booksdb.SeriesBook>>(options, info36);

            var info37 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.Collections.Generic.ICollection<global::core.audiamus.booksdb.Genre>>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).Genres,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Genres",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("Genres", InstanceMemberBindingFlags, null, typeof(global::System.Collections.Generic.ICollection<global::core.audiamus.booksdb.Genre>), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[37] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.Collections.Generic.ICollection<global::core.audiamus.booksdb.Genre>>(options, info37);

            var info38 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.Collections.Generic.ICollection<global::core.audiamus.booksdb.Ladder>>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).Ladders,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Ladders",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("Ladders", InstanceMemberBindingFlags, null, typeof(global::System.Collections.Generic.ICollection<global::core.audiamus.booksdb.Ladder>), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[38] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.Collections.Generic.ICollection<global::core.audiamus.booksdb.Ladder>>(options, info38);

            var info39 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.Collections.Generic.ICollection<global::core.audiamus.booksdb.Codec>>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.booksdb.Book),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Book)obj).Codecs,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Codecs",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Book).GetProperty("Codecs", InstanceMemberBindingFlags, null, typeof(global::System.Collections.Generic.ICollection<global::core.audiamus.booksdb.Codec>), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[39] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.Collections.Generic.ICollection<global::core.audiamus.booksdb.Codec>>(options, info39);

            return properties;
        }
    }
}
