// <auto-generated/>

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0612, CS0618

namespace core.audiamus.connect.ui
{
    public partial class WindowsFormsJsonContext
    {
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::core.audiamus.connect.IAudibleApi>? _IAudibleApi;
        
        /// <summary>
        /// Defines the source generated JSON serialization contract metadata for a given type.
        /// </summary>
        #nullable disable annotations // Marking the property type as nullable-oblivious.
        public global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::core.audiamus.connect.IAudibleApi> IAudibleApi
        #nullable enable annotations
        {
            get => _IAudibleApi ??= (global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::core.audiamus.connect.IAudibleApi>)Options.GetTypeInfo(typeof(global::core.audiamus.connect.IAudibleApi));
        }
        
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::core.audiamus.connect.IAudibleApi> Create_IAudibleApi(global::System.Text.Json.JsonSerializerOptions options)
        {
            if (!TryGetTypeInfoForRuntimeCustomConverter<global::core.audiamus.connect.IAudibleApi>(options, out global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::core.audiamus.connect.IAudibleApi> jsonTypeInfo))
            {
                var objectInfo = new global::System.Text.Json.Serialization.Metadata.JsonObjectInfoValues<global::core.audiamus.connect.IAudibleApi>
                {
                    ObjectCreator = null,
                    ObjectWithParameterizedConstructorCreator = null,
                    PropertyMetadataInitializer = _ => IAudibleApiPropInit(options),
                    ConstructorParameterMetadataInitializer = null,
                    ConstructorAttributeProviderFactory = null,
                    SerializeHandler = null,
                };
                
                jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateObjectInfo<global::core.audiamus.connect.IAudibleApi>(options, objectInfo);
                jsonTypeInfo.NumberHandling = null;
            }
        
            jsonTypeInfo.OriginatingResolver = this;
            return jsonTypeInfo;
        }

        private static global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[] IAudibleApiPropInit(global::System.Text.Json.JsonSerializerOptions options)
        {
            var properties = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[4];

            var info0 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.Func<global::System.Threading.Tasks.Task>>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.connect.IAudibleApi),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.IAudibleApi)obj).RefreshTokenAsyncFunc,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "RefreshTokenAsyncFunc",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.IAudibleApi).GetProperty("RefreshTokenAsyncFunc", InstanceMemberBindingFlags, null, typeof(global::System.Func<global::System.Threading.Tasks.Task>), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[0] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.Func<global::System.Threading.Tasks.Task>>(options, info0);

            var info1 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.Func<global::core.audiamus.connect.AccountAliasContext, bool>>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.connect.IAudibleApi),
                Converter = null,
                Getter = null,
                Setter = static (obj, value) => ((global::core.audiamus.connect.IAudibleApi)obj).GetAccountAliasFunc = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "GetAccountAliasFunc",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.IAudibleApi).GetProperty("GetAccountAliasFunc", InstanceMemberBindingFlags, null, typeof(global::System.Func<global::core.audiamus.connect.AccountAliasContext, bool>), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[1] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.Func<global::core.audiamus.connect.AccountAliasContext, bool>>(options, info1);

            var info2 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.connect.IProfileAliasKey),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.IProfileAliasKey)obj).AccountAlias,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "AccountAlias",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.IProfileAliasKey).GetProperty("AccountAlias", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[2] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info2);

            var info3 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::core.audiamus.common.ERegion>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.connect.IProfileAliasKey),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.connect.IProfileAliasKey)obj).Region,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Region",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.connect.IProfileAliasKey).GetProperty("Region", InstanceMemberBindingFlags, null, typeof(global::core.audiamus.common.ERegion), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[3] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::core.audiamus.common.ERegion>(options, info3);

            return properties;
        }
    }
}
