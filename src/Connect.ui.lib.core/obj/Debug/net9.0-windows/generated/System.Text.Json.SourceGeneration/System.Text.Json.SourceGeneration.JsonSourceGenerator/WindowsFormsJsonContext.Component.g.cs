// <auto-generated/>

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0612, CS0618

namespace core.audiamus.connect.ui
{
    public partial class WindowsFormsJsonContext
    {
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::core.audiamus.booksdb.Component>? _Component;
        
        /// <summary>
        /// Defines the source generated JSON serialization contract metadata for a given type.
        /// </summary>
        #nullable disable annotations // Marking the property type as nullable-oblivious.
        public global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::core.audiamus.booksdb.Component> Component
        #nullable enable annotations
        {
            get => _Component ??= (global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::core.audiamus.booksdb.Component>)Options.GetTypeInfo(typeof(global::core.audiamus.booksdb.Component));
        }
        
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::core.audiamus.booksdb.Component> Create_Component(global::System.Text.Json.JsonSerializerOptions options)
        {
            if (!TryGetTypeInfoForRuntimeCustomConverter<global::core.audiamus.booksdb.Component>(options, out global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::core.audiamus.booksdb.Component> jsonTypeInfo))
            {
                var objectInfo = new global::System.Text.Json.Serialization.Metadata.JsonObjectInfoValues<global::core.audiamus.booksdb.Component>
                {
                    ObjectCreator = () => new global::core.audiamus.booksdb.Component(),
                    ObjectWithParameterizedConstructorCreator = null,
                    PropertyMetadataInitializer = _ => ComponentPropInit(options),
                    ConstructorParameterMetadataInitializer = null,
                    ConstructorAttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Component).GetConstructor(InstanceMemberBindingFlags, binder: null, global::System.Array.Empty<global::System.Type>(), modifiers: null),
                    SerializeHandler = null,
                };
                
                jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateObjectInfo<global::core.audiamus.booksdb.Component>(options, objectInfo);
                jsonTypeInfo.NumberHandling = null;
            }
        
            jsonTypeInfo.OriginatingResolver = this;
            return jsonTypeInfo;
        }

        private static global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[] ComponentPropInit(global::System.Text.Json.JsonSerializerOptions options)
        {
            var properties = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[21];

            var info0 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<int>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Component),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Component)obj).Id,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Id",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Component).GetProperty("Id", InstanceMemberBindingFlags, null, typeof(int), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[0] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<int>(options, info0);

            var info1 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Component),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Component)obj).Asin,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Component)obj).Asin = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Asin",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Component).GetProperty("Asin", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[1] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info1);

            var info2 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Component),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Component)obj).Title,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Component)obj).Title = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Title",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Component).GetProperty("Title", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[2] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info2);

            var info3 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<int>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Component),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Component)obj).PartNumber,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Component)obj).PartNumber = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "PartNumber",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Component).GetProperty("PartNumber", InstanceMemberBindingFlags, null, typeof(int), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[3] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<int>(options, info3);

            var info4 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<int?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Component),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Component)obj).RunTimeLengthSeconds,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Component)obj).RunTimeLengthSeconds = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "RunTimeLengthSeconds",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Component).GetProperty("RunTimeLengthSeconds", InstanceMemberBindingFlags, null, typeof(int?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[4] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<int?>(options, info4);

            var info5 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<long?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Component),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Component)obj).FileSizeBytes,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Component)obj).FileSizeBytes = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "FileSizeBytes",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Component).GetProperty("FileSizeBytes", InstanceMemberBindingFlags, null, typeof(long?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[5] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<long?>(options, info5);

            var info6 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<int?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Component),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Component)obj).SampleRate,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Component)obj).SampleRate = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "SampleRate",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Component).GetProperty("SampleRate", InstanceMemberBindingFlags, null, typeof(int?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[6] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<int?>(options, info6);

            var info7 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<int?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Component),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Component)obj).BitRate,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Component)obj).BitRate = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "BitRate",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Component).GetProperty("BitRate", InstanceMemberBindingFlags, null, typeof(int?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[7] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<int?>(options, info7);

            var info8 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::core.audiamus.booksdb.EDownloadQuality?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Component),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Component)obj).DownloadQuality,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Component)obj).DownloadQuality = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "DownloadQuality",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Component).GetProperty("DownloadQuality", InstanceMemberBindingFlags, null, typeof(global::core.audiamus.booksdb.EDownloadQuality?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[8] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::core.audiamus.booksdb.EDownloadQuality?>(options, info8);

            var info9 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::core.audiamus.booksdb.ECodec?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Component),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Component)obj).FileCodec,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Component)obj).FileCodec = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "FileCodec",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Component).GetProperty("FileCodec", InstanceMemberBindingFlags, null, typeof(global::core.audiamus.booksdb.ECodec?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[9] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::core.audiamus.booksdb.ECodec?>(options, info9);

            var info10 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Component),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Component)obj).Sku,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Component)obj).Sku = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Sku",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Component).GetProperty("Sku", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[10] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info10);

            var info11 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Component),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Component)obj).SkuLite,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Component)obj).SkuLite = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "SkuLite",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Component).GetProperty("SkuLite", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[11] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info11);

            var info12 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Component),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Component)obj).LicenseKey,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Component)obj).LicenseKey = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "LicenseKey",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Component).GetProperty("LicenseKey", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[12] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info12);

            var info13 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Component),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Component)obj).LicenseIv,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Component)obj).LicenseIv = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "LicenseIv",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Component).GetProperty("LicenseIv", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[13] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info13);

            var info14 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::core.audiamus.booksdb.Conversion>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.booksdb.Component),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Component)obj).Conversion,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Component)obj).Conversion = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Conversion",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Component).GetProperty("Conversion", InstanceMemberBindingFlags, null, typeof(global::core.audiamus.booksdb.Conversion), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[14] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::core.audiamus.booksdb.Conversion>(options, info14);

            var info15 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::core.audiamus.booksdb.Book>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.booksdb.Component),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Component)obj).Book,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Component)obj).Book = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Book",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Component).GetProperty("Book", InstanceMemberBindingFlags, null, typeof(global::core.audiamus.booksdb.Book), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[15] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::core.audiamus.booksdb.Book>(options, info15);

            var info16 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::core.audiamus.booksdb.ChapterInfo>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.booksdb.Component),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Component)obj).ChapterInfo,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Component)obj).ChapterInfo = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "ChapterInfo",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Component).GetProperty("ChapterInfo", InstanceMemberBindingFlags, null, typeof(global::core.audiamus.booksdb.ChapterInfo), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[16] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::core.audiamus.booksdb.ChapterInfo>(options, info16);

            var info17 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Component),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Component)obj).Author,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Author",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Component).GetProperty("Author", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[17] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info17);

            var info18 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Component),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Component)obj).Narrator,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Narrator",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Component).GetProperty("Narrator", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[18] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info18);

            var info19 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.DateTime?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Component),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Component)obj).ReleaseDate,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "ReleaseDate",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Component).GetProperty("ReleaseDate", InstanceMemberBindingFlags, null, typeof(global::System.DateTime?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[19] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.DateTime?>(options, info19);

            var info20 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.DateTime?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Component),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Component)obj).PurchaseDate,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "PurchaseDate",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Component).GetProperty("PurchaseDate", InstanceMemberBindingFlags, null, typeof(global::System.DateTime?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[20] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.DateTime?>(options, info20);

            return properties;
        }
    }
}
