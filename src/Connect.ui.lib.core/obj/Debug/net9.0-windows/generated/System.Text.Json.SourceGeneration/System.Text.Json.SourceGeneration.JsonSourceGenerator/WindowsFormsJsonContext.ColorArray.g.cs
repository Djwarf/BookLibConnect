// <auto-generated/>

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0612, CS0618

namespace core.audiamus.connect.ui
{
    public partial class WindowsFormsJsonContext
    {
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::System.Drawing.Color[]>? _ColorArray;
        
        /// <summary>
        /// Defines the source generated JSON serialization contract metadata for a given type.
        /// </summary>
        #nullable disable annotations // Marking the property type as nullable-oblivious.
        public global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::System.Drawing.Color[]> ColorArray
        #nullable enable annotations
        {
            get => _ColorArray ??= (global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::System.Drawing.Color[]>)Options.GetTypeInfo(typeof(global::System.Drawing.Color[]));
        }
        
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::System.Drawing.Color[]> Create_ColorArray(global::System.Text.Json.JsonSerializerOptions options)
        {
            if (!TryGetTypeInfoForRuntimeCustomConverter<global::System.Drawing.Color[]>(options, out global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::System.Drawing.Color[]> jsonTypeInfo))
            {
                var info = new global::System.Text.Json.Serialization.Metadata.JsonCollectionInfoValues<global::System.Drawing.Color[]>
                {
                    ObjectCreator = null,
                    SerializeHandler = null
                };
                
                jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateArrayInfo<global::System.Drawing.Color>(options, info);
                jsonTypeInfo.NumberHandling = null;
            }
        
            jsonTypeInfo.OriginatingResolver = this;
            return jsonTypeInfo;
        }
    }
}
