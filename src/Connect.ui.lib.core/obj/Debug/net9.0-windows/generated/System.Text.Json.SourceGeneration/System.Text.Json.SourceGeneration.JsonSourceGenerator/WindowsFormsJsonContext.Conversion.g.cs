// <auto-generated/>

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0612, CS0618

namespace core.audiamus.connect.ui
{
    public partial class WindowsFormsJsonContext
    {
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::core.audiamus.booksdb.Conversion>? _Conversion;
        
        /// <summary>
        /// Defines the source generated JSON serialization contract metadata for a given type.
        /// </summary>
        #nullable disable annotations // Marking the property type as nullable-oblivious.
        public global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::core.audiamus.booksdb.Conversion> Conversion
        #nullable enable annotations
        {
            get => _Conversion ??= (global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::core.audiamus.booksdb.Conversion>)Options.GetTypeInfo(typeof(global::core.audiamus.booksdb.Conversion));
        }
        
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::core.audiamus.booksdb.Conversion> Create_Conversion(global::System.Text.Json.JsonSerializerOptions options)
        {
            if (!TryGetTypeInfoForRuntimeCustomConverter<global::core.audiamus.booksdb.Conversion>(options, out global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::core.audiamus.booksdb.Conversion> jsonTypeInfo))
            {
                var objectInfo = new global::System.Text.Json.Serialization.Metadata.JsonObjectInfoValues<global::core.audiamus.booksdb.Conversion>
                {
                    ObjectCreator = () => new global::core.audiamus.booksdb.Conversion(),
                    ObjectWithParameterizedConstructorCreator = null,
                    PropertyMetadataInitializer = _ => ConversionPropInit(options),
                    ConstructorParameterMetadataInitializer = null,
                    ConstructorAttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetConstructor(InstanceMemberBindingFlags, binder: null, global::System.Array.Empty<global::System.Type>(), modifiers: null),
                    SerializeHandler = null,
                };
                
                jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateObjectInfo<global::core.audiamus.booksdb.Conversion>(options, objectInfo);
                jsonTypeInfo.NumberHandling = null;
            }
        
            jsonTypeInfo.OriginatingResolver = this;
            return jsonTypeInfo;
        }

        private static global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[] ConversionPropInit(global::System.Text.Json.JsonSerializerOptions options)
        {
            var properties = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[39];

            var info0 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<int>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).Id,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Id",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("Id", InstanceMemberBindingFlags, null, typeof(int), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[0] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<int>(options, info0);

            var info1 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::core.audiamus.booksdb.EConversionState>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).State,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Conversion)obj).State = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "State",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("State", InstanceMemberBindingFlags, null, typeof(global::core.audiamus.booksdb.EConversionState), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[1] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::core.audiamus.booksdb.EConversionState>(options, info1);

            var info2 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.DateTime>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).LastUpdate,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Conversion)obj).LastUpdate = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "LastUpdate",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("LastUpdate", InstanceMemberBindingFlags, null, typeof(global::System.DateTime), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[2] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.DateTime>(options, info2);

            var info3 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::core.audiamus.booksdb.EConversionState?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).PersistState,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Conversion)obj).PersistState = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "PersistState",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("PersistState", InstanceMemberBindingFlags, null, typeof(global::core.audiamus.booksdb.EConversionState?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[3] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::core.audiamus.booksdb.EConversionState?>(options, info3);

            var info4 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).DownloadFileName,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Conversion)obj).DownloadFileName = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "DownloadFileName",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("DownloadFileName", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[4] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info4);

            var info5 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).DownloadUrl,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Conversion)obj).DownloadUrl = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "DownloadUrl",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("DownloadUrl", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[5] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info5);

            var info6 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).DestDirectory,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Conversion)obj).DestDirectory = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "DestDirectory",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("DestDirectory", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[6] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info6);

            var info7 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<int?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).ConvMode,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Conversion)obj).ConvMode = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "ConvMode",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("ConvMode", InstanceMemberBindingFlags, null, typeof(int?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[7] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<int?>(options, info7);

            var info8 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<int?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).ConvFormat,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Conversion)obj).ConvFormat = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "ConvFormat",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("ConvFormat", InstanceMemberBindingFlags, null, typeof(int?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[8] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<int?>(options, info8);

            var info9 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<int?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).Mp4AAudio,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Conversion)obj).Mp4AAudio = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Mp4AAudio",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("Mp4AAudio", InstanceMemberBindingFlags, null, typeof(int?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[9] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<int?>(options, info9);

            var info10 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<int?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).AveTrackLengthMinutes,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Conversion)obj).AveTrackLengthMinutes = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "AveTrackLengthMinutes",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("AveTrackLengthMinutes", InstanceMemberBindingFlags, null, typeof(int?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[10] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<int?>(options, info10);

            var info11 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<bool?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).NamedChapters,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Conversion)obj).NamedChapters = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "NamedChapters",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("NamedChapters", InstanceMemberBindingFlags, null, typeof(bool?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[11] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<bool?>(options, info11);

            var info12 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<bool?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).ChapterMarkAdjusting,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Conversion)obj).ChapterMarkAdjusting = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "ChapterMarkAdjusting",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("ChapterMarkAdjusting", InstanceMemberBindingFlags, null, typeof(bool?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[12] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<bool?>(options, info12);

            var info13 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<bool?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).PreferEmbChapMarks,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Conversion)obj).PreferEmbChapMarks = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "PreferEmbChapMarks",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("PreferEmbChapMarks", InstanceMemberBindingFlags, null, typeof(bool?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[13] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<bool?>(options, info13);

            var info14 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<bool?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).VariableBitRate,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Conversion)obj).VariableBitRate = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "VariableBitRate",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("VariableBitRate", InstanceMemberBindingFlags, null, typeof(bool?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[14] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<bool?>(options, info14);

            var info15 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<int?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).ReducedBitRate,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Conversion)obj).ReducedBitRate = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "ReducedBitRate",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("ReducedBitRate", InstanceMemberBindingFlags, null, typeof(int?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[15] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<int?>(options, info15);

            var info16 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<int?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).ShortChapDurSeconds,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Conversion)obj).ShortChapDurSeconds = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "ShortChapDurSeconds",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("ShortChapDurSeconds", InstanceMemberBindingFlags, null, typeof(int?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[16] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<int?>(options, info16);

            var info17 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<int?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).VeryShortChapDurSeconds,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Conversion)obj).VeryShortChapDurSeconds = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "VeryShortChapDurSeconds",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("VeryShortChapDurSeconds", InstanceMemberBindingFlags, null, typeof(int?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[17] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<int?>(options, info17);

            var info18 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<int>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).AccountId,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Conversion)obj).AccountId = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "AccountId",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("AccountId", InstanceMemberBindingFlags, null, typeof(int), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[18] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<int>(options, info18);

            var info19 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::core.audiamus.common.ERegion>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).Region,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Conversion)obj).Region = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Region",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("Region", InstanceMemberBindingFlags, null, typeof(global::core.audiamus.common.ERegion), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[19] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::core.audiamus.common.ERegion>(options, info19);

            var info20 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<int?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).BookId,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "BookId",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("BookId", InstanceMemberBindingFlags, null, typeof(int?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[20] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<int?>(options, info20);

            var info21 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<int?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).ComponentId,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "ComponentId",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("ComponentId", InstanceMemberBindingFlags, null, typeof(int?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[21] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<int?>(options, info21);

            var info22 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::core.audiamus.booksdb.Book>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).Book,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Conversion)obj).Book = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Book",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("Book", InstanceMemberBindingFlags, null, typeof(global::core.audiamus.booksdb.Book), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[22] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::core.audiamus.booksdb.Book>(options, info22);

            var info23 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::core.audiamus.booksdb.Component>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = true,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).Component,
                Setter = static (obj, value) => ((global::core.audiamus.booksdb.Conversion)obj).Component = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Component",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("Component", InstanceMemberBindingFlags, null, typeof(global::core.audiamus.booksdb.Component), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[23] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::core.audiamus.booksdb.Component>(options, info23);

            var info24 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).Asin,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Asin",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("Asin", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[24] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info24);

            var info25 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).Title,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Title",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("Title", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[25] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info25);

            var info26 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).Author,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Author",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("Author", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[26] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info26);

            var info27 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).Narrator,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Narrator",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("Narrator", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[27] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info27);

            var info28 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<long?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).FileSizeBytes,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "FileSizeBytes",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("FileSizeBytes", InstanceMemberBindingFlags, null, typeof(long?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[28] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<long?>(options, info28);

            var info29 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<int?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).RunTimeLengthSeconds,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "RunTimeLengthSeconds",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("RunTimeLengthSeconds", InstanceMemberBindingFlags, null, typeof(int?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[29] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<int?>(options, info29);

            var info30 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<int?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).SampleRate,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "SampleRate",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("SampleRate", InstanceMemberBindingFlags, null, typeof(int?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[30] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<int?>(options, info30);

            var info31 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<int?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).BitRate,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "BitRate",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("BitRate", InstanceMemberBindingFlags, null, typeof(int?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[31] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<int?>(options, info31);

            var info32 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).Sku,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Sku",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("Sku", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[32] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info32);

            var info33 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).SkuLite,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "SkuLite",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("SkuLite", InstanceMemberBindingFlags, null, typeof(string), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[33] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info33);

            var info34 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.DateTime?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).ReleaseDate,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "ReleaseDate",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("ReleaseDate", InstanceMemberBindingFlags, null, typeof(global::System.DateTime?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[34] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.DateTime?>(options, info34);

            var info35 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.DateTime?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).PurchaseDate,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "PurchaseDate",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("PurchaseDate", InstanceMemberBindingFlags, null, typeof(global::System.DateTime?), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[35] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.DateTime?>(options, info35);

            var info36 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::core.audiamus.booksdb.Book>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).ParentBook,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "ParentBook",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("ParentBook", InstanceMemberBindingFlags, null, typeof(global::core.audiamus.booksdb.Book), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[36] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::core.audiamus.booksdb.Book>(options, info36);

            var info37 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::core.audiamus.common.IBookMeta>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).BookMeta,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "BookMeta",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("BookMeta", InstanceMemberBindingFlags, null, typeof(global::core.audiamus.common.IBookMeta), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[37] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::core.audiamus.common.IBookMeta>(options, info37);

            var info38 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::core.audiamus.booksdb.IBookCommon>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::core.audiamus.booksdb.Conversion),
                Converter = null,
                Getter = static obj => ((global::core.audiamus.booksdb.Conversion)obj).BookCommon,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "BookCommon",
                JsonPropertyName = null,
                AttributeProviderFactory = static () => typeof(global::core.audiamus.booksdb.Conversion).GetProperty("BookCommon", InstanceMemberBindingFlags, null, typeof(global::core.audiamus.booksdb.IBookCommon), global::System.Array.Empty<global::System.Type>(), null),
            };
            
            properties[38] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::core.audiamus.booksdb.IBookCommon>(options, info38);

            return properties;
        }
    }
}
